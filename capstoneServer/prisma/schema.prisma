// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             String          @id @default(uuid())
  email          String          @unique
  firstName      String?
  lastName       String?
  DOB            DateTime
  phoneNumber    String
  city           String?
  wallet         Int?            @default(0)
  country        String?
  password       String
  role           String          @default("user")
  createdAt      DateTime        @default(now())
  profilePicture profilePicture?
  dataKapal      DataKapal[]
  Billing        Billing[]
  Payment        Payment[]
}

model Layanan {
  id           String    @id @default(uuid())
  jenisLayanan String?
  harga        Int?
  pelabuhan    String?
  satuanKerja  String?
  createdAt    DateTime  @default(now())
  Company      Company?  @relation(fields: [companyId], references: [id])
  companyId    String?
  Billing      Billing[]
}

model profilePicture {
  id        String   @id @default(uuid())
  users_id  String   @unique
  image_url String
  createdAt DateTime @default(now())
  users     Users    @relation(fields: [users_id], references: [id])
}

model DataKapal {
  id             String    @id @default(uuid())
  namaKapal      String
  jenisKapal     String
  panjangKapal   Int
  kapasitasKapal Int
  tanggalBuat    DateTime
  warna          String
  chassis        String
  noMesin        String
  kapalAktif     Boolean?
  dermaga        String?
  createdAt      DateTime  @default(now())
  users_id       String
  users          Users     @relation(fields: [users_id], references: [id])
  Billing        Billing[]
}

model Company {
  id        String    @id @default(uuid())
  companyId String    @unique
  name      String
  city      String
  country   String
  wallet    Int?      @default(0)
  phone     String
  email     String    @unique
  password  String
  role      String    @default("company")
  createdAt DateTime  @default(now())
  Layanan   Layanan[]
  Billing   Billing[]
}

model Billing {
  id          String     @id @default(uuid())
  duration    Int
  createdAt   DateTime   @default(now())
  Users       Users?     @relation(fields: [usersId], references: [id])
  usersId     String?
  Layanan     Layanan?   @relation(fields: [layananId], references: [id])
  layananId   String?
  DataKapal   DataKapal? @relation(fields: [dataKapalId], references: [id])
  dataKapalId String?
  Company     Company?   @relation(fields: [companyId], references: [id])
  companyId   String?
  payment     Payment?   @relation(fields: [paymentId], references: [id])
  paymentId   String?
}

model Payment {
  id          String    @id @default(uuid())
  status      String    @default("Pending")
  totalAmount Int?      @default(0)
  paymentDate String?
  Users       Users?    @relation(fields: [usersId], references: [id])
  usersId     String?
  Billing     Billing[]
}
